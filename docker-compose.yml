version: '3.9'
services:
  main:
    build:
      context: ./docker
      dockerfile: Dockerfile.compose
    entrypoint: /compose-entrypoint.sh
    expose:
      - 80
      - 443
    env_file:
      - .env
      #depends_on:
      #postgres:
      #  condition: service_healthy
      #redis:
      #  condition: service_started
    environment:
      - HOST=auto.chunyen.xyz
      - PROTOCOL=http
      - PORT=80
      - WEB_APP_URL=https://auto.chunyen.xyz
      - APP_ENV=production
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - POSTGRES_HOST=${POSTGRESQL_HOST}
      - POSTGRES_PORT=${POSTGRESQL_PORT}
      - POSTGRES_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRES_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - ENCRYPTION_KEY
      - WEBHOOK_SECRET_KEY
      - APP_SECRET_KEY
    volumes:
      - automatisch_storage:/automatisch/storage
  worker:
    build:
      context: ./docker
      dockerfile: Dockerfile.compose
    entrypoint: /compose-entrypoint.sh
    depends_on:
      - main
    env_file:
      - .env
    environment:
      - APP_ENV=production
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - POSTGRES_HOST=${POSTGRESQL_HOST}
      - POSTGRES_PORT=${POSTGRESQL_PORT}
      - POSTGRES_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRES_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
      - ENCRYPTION_KEY
      - WEBHOOK_SECRET_KEY
      - APP_SECRET_KEY
      - WORKER=true
    volumes:
      - automatisch_storage:/automatisch/storage
        
        #postgres:
        # image: 'postgres:14.5'
        # environment:
        #- POSTGRES_DB=automatisch
        #- POSTGRES_USER=automatisch_user
        #- POSTGRES_PASSWORD=automatisch_password
        #volumes:
        #- postgres_data:/var/lib/postgresql/data
        #healthcheck:
        #test:
        #[
        #  'CMD-SHELL',
        #  'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'
        #]
        #interval: 10s
        #timeout: 5s
        #retries: 5
  
        #redis:
        #image: 'redis:7.0.4'
        #volumes:
        #- redis_data:/data

  nginx:
    container_name: automatisch_nginx
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
      - ./conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - main
    restart: always

volumes:
  automatisch_storage:
  postgres_data:
  redis_data:
